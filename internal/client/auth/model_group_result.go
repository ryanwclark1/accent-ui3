/*
accent-auth

Accent's authentication service

API version: 0.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth

import (
	"encoding/json"
)

// checks if the GroupResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupResult{}

// GroupResult struct for GroupResult
type GroupResult struct {
	Name     *string `json:"name,omitempty"`
	ReadOnly *bool   `json:"read_only,omitempty"`
	Slug     *string `json:"slug,omitempty"`
	// *Deprecated* Please use `read_only`
	SystemManaged *bool   `json:"system_managed,omitempty"`
	TenantUuid    *string `json:"tenant_uuid,omitempty"`
	Uuid          *string `json:"uuid,omitempty"`
}

// NewGroupResult instantiates a new GroupResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupResult() *GroupResult {
	this := GroupResult{}
	return &this
}

// NewGroupResultWithDefaults instantiates a new GroupResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupResultWithDefaults() *GroupResult {
	this := GroupResult{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GroupResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GroupResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GroupResult) SetName(v string) {
	o.Name = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *GroupResult) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResult) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *GroupResult) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *GroupResult) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *GroupResult) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResult) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *GroupResult) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *GroupResult) SetSlug(v string) {
	o.Slug = &v
}

// GetSystemManaged returns the SystemManaged field value if set, zero value otherwise.
func (o *GroupResult) GetSystemManaged() bool {
	if o == nil || IsNil(o.SystemManaged) {
		var ret bool
		return ret
	}
	return *o.SystemManaged
}

// GetSystemManagedOk returns a tuple with the SystemManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResult) GetSystemManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.SystemManaged) {
		return nil, false
	}
	return o.SystemManaged, true
}

// HasSystemManaged returns a boolean if a field has been set.
func (o *GroupResult) HasSystemManaged() bool {
	if o != nil && !IsNil(o.SystemManaged) {
		return true
	}

	return false
}

// SetSystemManaged gets a reference to the given bool and assigns it to the SystemManaged field.
func (o *GroupResult) SetSystemManaged(v bool) {
	o.SystemManaged = &v
}

// GetTenantUuid returns the TenantUuid field value if set, zero value otherwise.
func (o *GroupResult) GetTenantUuid() string {
	if o == nil || IsNil(o.TenantUuid) {
		var ret string
		return ret
	}
	return *o.TenantUuid
}

// GetTenantUuidOk returns a tuple with the TenantUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResult) GetTenantUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TenantUuid) {
		return nil, false
	}
	return o.TenantUuid, true
}

// HasTenantUuid returns a boolean if a field has been set.
func (o *GroupResult) HasTenantUuid() bool {
	if o != nil && !IsNil(o.TenantUuid) {
		return true
	}

	return false
}

// SetTenantUuid gets a reference to the given string and assigns it to the TenantUuid field.
func (o *GroupResult) SetTenantUuid(v string) {
	o.TenantUuid = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *GroupResult) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupResult) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *GroupResult) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *GroupResult) SetUuid(v string) {
	o.Uuid = &v
}

func (o GroupResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["read_only"] = o.ReadOnly
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.SystemManaged) {
		toSerialize["system_managed"] = o.SystemManaged
	}
	if !IsNil(o.TenantUuid) {
		toSerialize["tenant_uuid"] = o.TenantUuid
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableGroupResult struct {
	value *GroupResult
	isSet bool
}

func (v NullableGroupResult) Get() *GroupResult {
	return v.value
}

func (v *NullableGroupResult) Set(val *GroupResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupResult(val *GroupResult) *NullableGroupResult {
	return &NullableGroupResult{value: val, isSet: true}
}

func (v NullableGroupResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
