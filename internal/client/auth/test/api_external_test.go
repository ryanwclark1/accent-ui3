/*
accent-auth

Testing ExternalAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package auth

import (
	"context"
	openapiclient "github.com/ryanwclark1/accent-ui2/internal/client/auth"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_auth_ExternalAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ExternalAPIService DeleteExternalAuthConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var authType string

		httpRes, err := apiClient.ExternalAPI.DeleteExternalAuthConfig(context.Background(), authType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ExternalAPIService GetExternalAuthConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var authType string

		resp, httpRes, err := apiClient.ExternalAPI.GetExternalAuthConfig(context.Background(), authType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ExternalAPIService GetExternalAuthUsers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var authType string

		resp, httpRes, err := apiClient.ExternalAPI.GetExternalAuthUsers(context.Background(), authType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ExternalAPIService GetUserExternalAuth", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var userUuid string

		resp, httpRes, err := apiClient.ExternalAPI.GetUserExternalAuth(context.Background(), userUuid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ExternalAPIService PostExternalAuthConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var authType string

		httpRes, err := apiClient.ExternalAPI.PostExternalAuthConfig(context.Background(), authType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ExternalAPIService UpdateExternalAuthConfig", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var authType string

		httpRes, err := apiClient.ExternalAPI.UpdateExternalAuthConfig(context.Background(), authType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
