/*
accent-auth

Accent's authentication service

API version: 0.1
Contact: help@accentvoice.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ExternalAuthList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalAuthList{}

// ExternalAuthList struct for ExternalAuthList
type ExternalAuthList struct {
	// The number of external auth matching the searched term.
	Filtered int32 `json:"filtered"`
	// A paginated list of external auth
	Items []ExternalAuth `json:"items"`
	// The number of external auth.
	Total int32 `json:"total"`
}

type _ExternalAuthList ExternalAuthList

// NewExternalAuthList instantiates a new ExternalAuthList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalAuthList(filtered int32, items []ExternalAuth, total int32) *ExternalAuthList {
	this := ExternalAuthList{}
	this.Filtered = filtered
	this.Items = items
	this.Total = total
	return &this
}

// NewExternalAuthListWithDefaults instantiates a new ExternalAuthList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalAuthListWithDefaults() *ExternalAuthList {
	this := ExternalAuthList{}
	return &this
}

// GetFiltered returns the Filtered field value
func (o *ExternalAuthList) GetFiltered() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Filtered
}

// GetFilteredOk returns a tuple with the Filtered field value
// and a boolean to check if the value has been set.
func (o *ExternalAuthList) GetFilteredOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filtered, true
}

// SetFiltered sets field value
func (o *ExternalAuthList) SetFiltered(v int32) {
	o.Filtered = v
}

// GetItems returns the Items field value
func (o *ExternalAuthList) GetItems() []ExternalAuth {
	if o == nil {
		var ret []ExternalAuth
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ExternalAuthList) GetItemsOk() ([]ExternalAuth, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ExternalAuthList) SetItems(v []ExternalAuth) {
	o.Items = v
}

// GetTotal returns the Total field value
func (o *ExternalAuthList) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ExternalAuthList) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ExternalAuthList) SetTotal(v int32) {
	o.Total = v
}

func (o ExternalAuthList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalAuthList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filtered"] = o.Filtered
	toSerialize["items"] = o.Items
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *ExternalAuthList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"filtered",
		"items",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalAuthList := _ExternalAuthList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalAuthList)

	if err != nil {
		return err
	}

	*o = ExternalAuthList(varExternalAuthList)

	return err
}

type NullableExternalAuthList struct {
	value *ExternalAuthList
	isSet bool
}

func (v NullableExternalAuthList) Get() *ExternalAuthList {
	return v.value
}

func (v *NullableExternalAuthList) Set(val *ExternalAuthList) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalAuthList) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalAuthList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalAuthList(val *ExternalAuthList) *NullableExternalAuthList {
	return &NullableExternalAuthList{value: val, isSet: true}
}

func (v NullableExternalAuthList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalAuthList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
